!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! Disc diag startup file
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

!
! Init procedure, runs on startup
!
init:

    p "This is the initialize script"
    p
    p "The \"helps\" command gives information on script commands"
    p

end

!
! Print help list for script commands
!
helps:

    p "testwr span         - Perform linear write and read test."
    p "testwrr span count  - Perform linear write with random read test."
    p "testwrrl span count - Perform linear write with random read and length test."
    p "testwrrr count      - Perform random length writes and reads at random"
    p "                      locations and lengths test."
    p "testwrrro count     - Perform random length writes and reads at random"
    p "                      locations and lengths with overwrite test."
    p "accept              - Run all tests in turn."

end

!
! Perform linear write and read test
!
! This test linearly writes the number of the lba into each sector,
! then linearly reads and compares it. The parameter gives the number
! of whole buffers to write in the write/read block. The command:
!
! Diag> testlba drvsiz/bufsiz
!
! Would test the entire drive.
!
! Uses both count and random patterns for the background pattern.
!
testwr(span):

    ! set count pattern
    pt cnt

    ! perform write pass
    s lba 0
    pt lba lba; w lba bufsiz; s lba lba+bufsiz; lq span

    ! perform read pass
    s lba 0
    r lba bufsiz; pt lba lba; c buffs; s lba lba+bufsiz; lq span

    ! set random pattern
    pt rand

    ! perform write pass
    s lba 0
    pt lba lba; w lba bufsiz; s lba lba+bufsiz; lq span

    ! perform read pass
    s lba 0
    r lba bufsiz; pt lba lba; c buffs; s lba lba+bufsiz; lq span

end

!
! Perform linear write with random read test
!
! Does the same thing as testwr, but reads at random locations on the disk.
! In addition to the block span parameter is a loop count parameter that
! gives the total number of reads to perform.
!
! The buffer span must be > 1.
!
! Uses both count and random patterns for the background pattern.
!
testwrr(span count):

    ! validate parameter
    if span<1; p "*** Error: Invalid span"; end

    ! set count pattern
    pt cnt

    ! write the block of sectors we will work in
    s lba 0
    pt lba lba; w lba bufsiz; s lba lba+bufsiz; lq span

    ! read within that block
    ! Note that we can't read a block of sectors past the end-bufsiz,
    ! since that would extend to unwritten space
    s lba lbarnd%(bufsiz*span-bufsiz); r lba bufsiz; pt lba lba; c buffs; lq count

    ! set random pattern
    pt rand

    ! write the block of sectors we will work in
    s lba 0
    pt lba lba; w lba bufsiz; s lba lba+bufsiz; lq span

    ! read within that block
    ! Note that we can't read a block of sectors past the end-bufsiz,
    ! since that would extend to unwritten space
    s lba lbarnd%(bufsiz*span-bufsiz); r lba bufsiz; pt lba lba; c buffs; lq count

end

!
! Perform linear write with random read and length test
!
! Does the same thing as the testwrr test, but does it at
! random locations on the disk with random lengths.
!
! The buffer span must be > 1.
!
! Uses both count and random patterns for the background pattern.
!
testwrrl(span count):

    ! validate parameter
    if span<1; p "*** Error: Invalid span"; end

    ! set count pattern
    pt cnt

    ! write the block of sectors we will work in
    s lba 0
    pt lba lba; w lba bufsiz; s lba lba+bufsiz; lq span

    ! read within that block
    ! Note that we can't read a block of sectors past the end-bufsiz,
    ! since that would extend to unwritten space
    s lba rand%(bufsiz*span-bufsiz); s siz rand%bufsiz; r lba siz; pt lba lba siz; c buffs 0 siz; lq count

    ! set random pattern
    pt rand
    ! write the block of sectors we will work in
    s lba 0
    pt lba lba; w lba bufsiz; s lba lba+bufsiz; lq span

    ! read within that block
    ! Note that we can't read a block of sectors past the end-bufsiz,
    ! since that would extend to unwritten space
    s lba rand%(bufsiz*span-bufsiz); s siz rand%bufsiz; r lba siz; pt lba lba siz; c buffs 0 siz; lq count

end

!
! Perform random length writes and reads at random locations and lengths test
!
! Writes and then reads and verifies a random number of sectors
! at a random lba on the drive, using random length.
!
! The count parameter indicates how many read and write operations to perform.
!
! Uses both count and random patterns for the background pattern.
!
testwrrr(count):

    ! set count pattern
    pt cnt
    ! write and read blocks
    s lba rand%(drvsiz-bufsiz); s siz rand%bufsiz; pt lba lba; w lba siz; r lba siz; c buffs 0 siz; lq count

    ! set random pattern
    pt rand
    ! write and read blocks
    s lba rand%(drvsiz-bufsiz); s siz rand%bufsiz; pt lba lba; w lba siz; r lba siz; c buffs 0 siz; lq count

end

!
! Perform random length writes and reads at random locations and lengths with 
! overwrite test
!
! Performs the same test as testwrrr, but performs each block twice, each time 
! with different patterns. This covers "no op" cases where the buffer update 
! never happened.
!
! Note that this makes it significantly slower than testwrrr.
!
! Uses both count and random patterns for the background pattern (each pattern
! is used in opposition to the other).
!
testwrrro(count):

    ! write and read blocks
    s lba rand%(drvsiz-bufsiz); s siz rand%bufsiz; pt cnt; pt lba lba; w lba siz; r lba siz; c buffs 0 siz; pt rand; pt lba lba; w lba siz; r lba siz; c buffs 0 siz; lq count

end

!
! Acceptance test
!
! Runs the individual tests that constitute the drive acceptance test.
!
accept:

    p "Drive acceptance test"

    p "Initial acceptance: read and write sector 0 only"
    ! simple test to read and write a sector
    r; pt cnt; w; r; c cnt 0 1
    ! do it again and make sure it will tolerate overwrites
    pt rand; w; r; c rand 0 1; pt cnt; w; r; c cnt 0 1

    ! note that the individual tests are timed to take about 10 minutes each
    p "Linear write and read test"
    testwr 300000

    p "Linear write with random read test"
    testwrr 300000 300000

    p "Linear write with random read and length test"
    testwrrl 300000 300000

    p "Random length writes and reads at random locations and lengths test"
    testwrrr 300000

    p "Random length writes and reads at random locations and lengths with overwrite test"
    testwrrro 150000

end
